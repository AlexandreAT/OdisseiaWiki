// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OdisseiaWiki.Data;

#nullable disable

namespace OdisseiaWiki.Migrations
{
    [DbContext(typeof(OdisseiaContext))]
    [Migration("20250924171456_CorrigindoImagemPersonagem")]
    partial class CorrigindoImagemPersonagem
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_general_ci")
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");
            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Item", b =>
                {
                    b.Property<string>("Iditem")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("IDItem");

                    b.Property<string>("AtributosJson")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("Descricao")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Efeito")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("IditemBase")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Idpersonagem")
                        .HasColumnType("int");

                    b.Property<string>("Imagem")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("PersonagemIdpersonagem")
                        .HasColumnType("int(11)");

                    b.Property<decimal?>("Peso")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Tipo");

                    b.HasKey("Iditem")
                        .HasName("PRIMARY");

                    b.HasIndex("PersonagemIdpersonagem");

                    b.ToTable("itens", (string)null);
                });

            modelBuilder.Entity("OdisseiaWiki.Models.Cidade", b =>
                {
                    b.Property<int>("Idcidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("IDCidade");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Idcidade"));

                    b.Property<DateOnly>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("GaleriaImagem")
                        .HasColumnType("longtext");

                    b.Property<string>("Imagem")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Idcidade")
                        .HasName("PRIMARY");

                    b.ToTable("cidades", (string)null);
                });

            modelBuilder.Entity("OdisseiaWiki.Models.Infolore", b =>
                {
                    b.Property<int>("IdinfoLore")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("IDInfoLore");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdinfoLore"));

                    b.Property<DateOnly>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("Imagem")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("Ordem")
                        .HasColumnType("int(11)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.HasKey("IdinfoLore")
                        .HasName("PRIMARY");

                    b.ToTable("infolore", (string)null);
                });

            modelBuilder.Entity("OdisseiaWiki.Models.Mesa", b =>
                {
                    b.Property<int>("Idmesa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("IDMesa");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Idmesa"));

                    b.Property<DateOnly>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<int?>("IdusuarioCriacao")
                        .HasColumnType("int(11)")
                        .HasColumnName("IDUsuarioCriacao");

                    b.Property<string>("Imagem")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Idmesa")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdusuarioCriacao" }, "ID usuario criacao");

                    b.ToTable("mesas", (string)null);
                });

            modelBuilder.Entity("OdisseiaWiki.Models.Mesaracaconfig", b =>
                {
                    b.Property<int>("IdmesaRacaConfig")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("IDMesaRacaConfig");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdmesaRacaConfig"));

                    b.Property<int>("Idmesa")
                        .HasColumnType("int(11)")
                        .HasColumnName("IDMesa");

                    b.Property<int>("Idraca")
                        .HasColumnType("int(11)")
                        .HasColumnName("IDRaca");

                    b.Property<string>("StatusJson")
                        .HasColumnType("longtext");

                    b.HasKey("IdmesaRacaConfig")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Idmesa" }, "ID mesas");

                    b.HasIndex(new[] { "Idraca" }, "ID raca");

                    b.ToTable("mesaracaconfig", (string)null);
                });

            modelBuilder.Entity("OdisseiaWiki.Models.Mesausuario", b =>
                {
                    b.Property<int>("IdmesaUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("IDMesaUsuario");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdmesaUsuario"));

                    b.Property<int?>("Idmesa")
                        .HasColumnType("int(11)")
                        .HasColumnName("IDMesa");

                    b.Property<int?>("Idusuario")
                        .HasColumnType("int(11)")
                        .HasColumnName("IDUsuario");

                    b.HasKey("IdmesaUsuario")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Idmesa" }, "ID mesa");

                    b.HasIndex(new[] { "Idusuario" }, "ID usuario");

                    b.ToTable("mesausuarios", (string)null);
                });

            modelBuilder.Entity("OdisseiaWiki.Models.PersonagemJogador", b =>
                {
                    b.Property<int>("IdpersonagemJogador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("IDPersonagemJogador");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdpersonagemJogador"));

                    b.Property<string>("Alinhamento")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Costumes")
                        .HasColumnType("text");

                    b.Property<DateOnly>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("GaleriaImagem")
                        .HasColumnType("longtext");

                    b.Property<string>("Historia")
                        .HasColumnType("text");

                    b.Property<int?>("Idcidade")
                        .HasColumnType("int(11)")
                        .HasColumnName("IDCidade");

                    b.Property<int>("Idmesa")
                        .HasColumnType("int(11)")
                        .HasColumnName("IDMesa");

                    b.Property<int>("Idraca")
                        .HasColumnType("int(11)")
                        .HasColumnName("IDRaca");

                    b.Property<int>("Idusuario")
                        .HasColumnType("int(11)")
                        .HasColumnName("IDUsuario");

                    b.Property<string>("Imagem")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("InfoSecundariasJson")
                        .HasColumnType("text");

                    b.Property<string>("InventarioJson")
                        .HasColumnType("json");

                    b.Property<string>("Magia")
                        .HasColumnType("longtext");

                    b.Property<string>("Nanites")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PersonagemsVinculados")
                        .HasColumnType("longtext");

                    b.Property<string>("Skills")
                        .HasColumnType("longtext");

                    b.Property<string>("StatusJson")
                        .IsRequired()
                        .HasColumnType("json");

                    b.Property<string>("Tracos")
                        .HasColumnType("text");

                    b.HasKey("IdpersonagemJogador")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Idcidade" }, "ID_cidades");

                    b.HasIndex(new[] { "Idmesa" }, "ID_mesas");

                    b.HasIndex(new[] { "Idraca" }, "ID_racas");

                    b.HasIndex(new[] { "Idusuario" }, "ID_usuarios");

                    b.ToTable("personagensJogador", (string)null);
                });

            modelBuilder.Entity("OdisseiaWiki.Models.Personageminfolore", b =>
                {
                    b.Property<int>("IdpersonagemInfoLore")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("IDPersonagemInfoLore");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdpersonagemInfoLore"));

                    b.Property<int>("IdinfoLore")
                        .HasColumnType("int(11)")
                        .HasColumnName("IDInfoLore");

                    b.Property<int>("Idpersonagem")
                        .HasColumnType("int(11)")
                        .HasColumnName("IDPersonagem");

                    b.HasKey("IdpersonagemInfoLore")
                        .HasName("PRIMARY");

                    b.ToTable("personageminfolore", (string)null);
                });

            modelBuilder.Entity("OdisseiaWiki.Models.Personagen", b =>
                {
                    b.Property<int>("Idpersonagem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("IDPersonagem");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Idpersonagem"));

                    b.Property<string>("Alinhamento")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Costumes")
                        .HasColumnType("text");

                    b.Property<DateOnly>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("GaleriaImagem")
                        .HasColumnType("longtext");

                    b.Property<string>("Historia")
                        .HasColumnType("longtext");

                    b.Property<int?>("Idcidade")
                        .HasColumnType("int(11)")
                        .HasColumnName("IDCidade");

                    b.Property<int>("Idraca")
                        .HasColumnType("int(11)")
                        .HasColumnName("IDRaca");

                    b.Property<string>("Imagem")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("InventarioJson")
                        .HasColumnType("longtext");

                    b.Property<string>("Magia")
                        .HasColumnType("longtext");

                    b.Property<string>("Nanites")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PersonagemsVinculados")
                        .HasColumnType("longtext");

                    b.Property<string>("Skills")
                        .HasColumnType("longtext");

                    b.Property<string>("StatusJson")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tracos")
                        .HasColumnType("text");

                    b.HasKey("Idpersonagem")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Idcidade" }, "ID cidades");

                    b.HasIndex(new[] { "Idraca" }, "ID racas");

                    b.ToTable("personagens", (string)null);
                });

            modelBuilder.Entity("OdisseiaWiki.Models.Raca", b =>
                {
                    b.Property<int>("Idraca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("IDRaca");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Idraca"));

                    b.Property<DateOnly>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("GaleriaImagem")
                        .HasColumnType("longtext");

                    b.Property<string>("Imagem")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("StatusJson")
                        .HasColumnType("json");

                    b.HasKey("Idraca")
                        .HasName("PRIMARY");

                    b.ToTable("racas", (string)null);
                });

            modelBuilder.Entity("OdisseiaWiki.Models.Usuario", b =>
                {
                    b.Property<int>("Idusuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("IDUsuario");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Idusuario"));

                    b.Property<string>("Celular")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<DateOnly>("DataRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("current_timestamp()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ImagemUrl")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Idusuario")
                        .HasName("PRIMARY");

                    b.ToTable("usuarios", (string)null);
                });

            modelBuilder.Entity("Item", b =>
                {
                    b.HasOne("OdisseiaWiki.Models.Personagen", "Personagem")
                        .WithMany()
                        .HasForeignKey("PersonagemIdpersonagem");

                    b.Navigation("Personagem");
                });

            modelBuilder.Entity("OdisseiaWiki.Models.Mesa", b =>
                {
                    b.HasOne("OdisseiaWiki.Models.Usuario", "IdusuarioCriacaoNavigation")
                        .WithMany("Mesas")
                        .HasForeignKey("IdusuarioCriacao")
                        .HasConstraintName("ID usuario criacao");

                    b.Navigation("IdusuarioCriacaoNavigation");
                });

            modelBuilder.Entity("OdisseiaWiki.Models.Mesaracaconfig", b =>
                {
                    b.HasOne("OdisseiaWiki.Models.Mesa", "IdmesaNavigation")
                        .WithMany("Mesaracaconfigs")
                        .HasForeignKey("Idmesa")
                        .IsRequired()
                        .HasConstraintName("ID mesas");

                    b.HasOne("OdisseiaWiki.Models.Raca", "IdracaNavigation")
                        .WithMany("Mesaracaconfigs")
                        .HasForeignKey("Idraca")
                        .IsRequired()
                        .HasConstraintName("ID raca");

                    b.Navigation("IdmesaNavigation");

                    b.Navigation("IdracaNavigation");
                });

            modelBuilder.Entity("OdisseiaWiki.Models.Mesausuario", b =>
                {
                    b.HasOne("OdisseiaWiki.Models.Mesa", "IdmesaNavigation")
                        .WithMany("Mesausuarios")
                        .HasForeignKey("Idmesa")
                        .HasConstraintName("ID mesa");

                    b.HasOne("OdisseiaWiki.Models.Usuario", "IdusuarioNavigation")
                        .WithMany("Mesausuarios")
                        .HasForeignKey("Idusuario")
                        .HasConstraintName("ID usuario");

                    b.Navigation("IdmesaNavigation");

                    b.Navigation("IdusuarioNavigation");
                });

            modelBuilder.Entity("OdisseiaWiki.Models.PersonagemJogador", b =>
                {
                    b.HasOne("OdisseiaWiki.Models.Cidade", "IdcidadeNavigation")
                        .WithMany()
                        .HasForeignKey("Idcidade")
                        .HasConstraintName("FK_PersonagensJogador_Cidade");

                    b.HasOne("OdisseiaWiki.Models.Mesa", "Mesa")
                        .WithMany("PersonagensJogadores")
                        .HasForeignKey("Idmesa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PersonagensJogador_Mesa");

                    b.HasOne("OdisseiaWiki.Models.Raca", "IdracaNavigation")
                        .WithMany()
                        .HasForeignKey("Idraca")
                        .IsRequired()
                        .HasConstraintName("FK_PersonagensJogador_Raca");

                    b.HasOne("OdisseiaWiki.Models.Usuario", "Usuario")
                        .WithMany("PersonagensJogadores")
                        .HasForeignKey("Idusuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PersonagensJogador_Usuario");

                    b.Navigation("IdcidadeNavigation");

                    b.Navigation("IdracaNavigation");

                    b.Navigation("Mesa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("OdisseiaWiki.Models.Personagen", b =>
                {
                    b.HasOne("OdisseiaWiki.Models.Cidade", "IdcidadeNavigation")
                        .WithMany("Personagens")
                        .HasForeignKey("Idcidade")
                        .HasConstraintName("ID cidades");

                    b.HasOne("OdisseiaWiki.Models.Raca", "IdracaNavigation")
                        .WithMany("Personagens")
                        .HasForeignKey("Idraca")
                        .IsRequired()
                        .HasConstraintName("ID racas");

                    b.Navigation("IdcidadeNavigation");

                    b.Navigation("IdracaNavigation");
                });

            modelBuilder.Entity("OdisseiaWiki.Models.Cidade", b =>
                {
                    b.Navigation("Personagens");
                });

            modelBuilder.Entity("OdisseiaWiki.Models.Mesa", b =>
                {
                    b.Navigation("Mesaracaconfigs");

                    b.Navigation("Mesausuarios");

                    b.Navigation("PersonagensJogadores");
                });

            modelBuilder.Entity("OdisseiaWiki.Models.Raca", b =>
                {
                    b.Navigation("Mesaracaconfigs");

                    b.Navigation("Personagens");
                });

            modelBuilder.Entity("OdisseiaWiki.Models.Usuario", b =>
                {
                    b.Navigation("Mesas");

                    b.Navigation("Mesausuarios");

                    b.Navigation("PersonagensJogadores");
                });
#pragma warning restore 612, 618
        }
    }
}
